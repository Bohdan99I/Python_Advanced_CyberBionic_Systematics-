"""–ó–∞–≤–¥–∞–Ω–Ω—è 4. –ê–≥—Ä–µ–≥–∞—Ç–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –≤–∏—Ç—Ä–∞—Ç —ñ –ø—Ä–∏–±—É—Ç–∫—ñ–≤ –∑–∞ –º—ñ—Å—è—Ü—å."""

import sqlite3
from datetime import datetime
import os


# --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö ---
def init_db():
    """–°—Ç–≤–æ—Ä—é—î –±–∞–∑—É –¥–∞–Ω–∏—Ö —ñ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ —ó—ó —â–µ –Ω–µ–º–∞—î."""
    current_dir = os.path.dirname(os.path.abspath(__file__))
    db_path = os.path.join(current_dir, "expenses.db")

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    cursor.execute(
        """
        CREATE TABLE IF NOT EXISTS expenses (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            purpose TEXT NOT NULL,
            amount REAL NOT NULL,
            type TEXT CHECK(type IN ('–≤–∏—Ç—Ä–∞—Ç–∞', '–ø—Ä–∏–±—É—Ç–æ–∫')) NOT NULL,
            time TEXT NOT NULL
        )
    """
    )

    conn.commit()
    conn.close()


# --- –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É ---
def add_record(purpose, amount, record_type):
    """–î–æ–¥–∞—î –Ω–æ–≤–∏–π –∑–∞–ø–∏—Å –¥–æ —Ç–∞–±–ª–∏—Ü—ñ."""
    current_dir = os.path.dirname(os.path.abspath(__file__))
    db_path = os.path.join(current_dir, "expenses.db")

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    cursor.execute(
        "INSERT INTO expenses (purpose, amount, type, time) VALUES (?, ?, ?, ?)",
        (purpose, amount, record_type, datetime.now().strftime("%Y-%m-%d %H:%M:%S")),
    )

    conn.commit()
    conn.close()
    print("‚úÖ –ó–∞–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!")


# --- –ê–≥—Ä–µ–≥–∞—Ç–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É ---
def calculate_totals(month):
    """–û–±—á–∏—Å–ª—é—î –∑–∞–≥–∞–ª—å–Ω—ñ —Å—É–º–∏ –ø—Ä–∏–±—É—Ç–∫—ñ–≤ —ñ –≤–∏—Ç—Ä–∞—Ç –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–π –º—ñ—Å—è—Ü—å."""
    current_dir = os.path.dirname(os.path.abspath(__file__))
    db_path = os.path.join(current_dir, "expenses.db")

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    # –í–∏–±—ñ—Ä–∫–∞ –≤–∏—Ç—Ä–∞—Ç
    cursor.execute(
        """
        SELECT SUM(amount) FROM expenses
        WHERE type='–≤–∏—Ç—Ä–∞—Ç–∞' AND strftime('%m', time)=?
    """,
        (month,),
    )
    total_expenses = cursor.fetchone()[0] or 0

    # –í–∏–±—ñ—Ä–∫–∞ –ø—Ä–∏–±—É—Ç–∫—ñ–≤
    cursor.execute(
        """
        SELECT SUM(amount) FROM expenses
        WHERE type='–ø—Ä–∏–±—É—Ç–æ–∫' AND strftime('%m', time)=?
    """,
        (month,),
    )
    total_income = cursor.fetchone()[0] or 0

    conn.close()
    return total_expenses, total_income


# --- –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ---
def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—î —Ä–æ–±–æ—Ç—É CLI –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –≤–∏—Ç—Ä–∞—Ç —ñ –ø—Ä–∏–±—É—Ç–∫—ñ–≤."""
    init_db()

    while True:
        print("\n=== –ú–µ–Ω—é —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –æ–±–ª—ñ–∫—É ===")
        print("1. –î–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å")
        print("2. –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏ —Ç–∞ –ø—Ä–∏–±—É—Ç–∫–∏ –∑–∞ –º—ñ—Å—è—Ü—å")
        print("3. –í–∏—Ö—ñ–¥")

        choice = input("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é: ")

        if choice == "1":
            purpose = input("–í–≤–µ–¥—ñ—Ç—å –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: ")
            amount = float(input("–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É: "))
            record_type = input("–í–≤–µ–¥—ñ—Ç—å —Ç–∏–ø (–≤–∏—Ç—Ä–∞—Ç–∞ / –ø—Ä–∏–±—É—Ç–æ–∫): ").strip().lower()
            if record_type not in ("–≤–∏—Ç—Ä–∞—Ç–∞", "–ø—Ä–∏–±—É—Ç–æ–∫"):
                print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ç–∏–ø. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ '–≤–∏—Ç—Ä–∞—Ç–∞' –∞–±–æ '–ø—Ä–∏–±—É—Ç–æ–∫'.")
                continue
            add_record(purpose, amount, record_type)

        elif choice == "2":
            month = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –º—ñ—Å—è—Ü—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 03 –¥–ª—è –±–µ—Ä–µ–∑–Ω—è): ")
            expenses, income = calculate_totals(month)
            print(f"\nüìÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–∞ –º—ñ—Å—è—Ü—å {month}:")
            print(f"–ó–∞–≥–∞–ª—å–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏: {expenses:.2f} –≥—Ä–Ω")
            print(f"–ó–∞–≥–∞–ª—å–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫: {income:.2f} –≥—Ä–Ω")
            print(f"–ë–∞–ª–∞–Ω—Å: {income - expenses:.2f} –≥—Ä–Ω")

        elif choice == "3":
            print("üëã –í–∏—Ö—ñ–¥ —ñ–∑ –ø—Ä–æ–≥—Ä–∞–º–∏.")
            break
        else:
            print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")


if __name__ == "__main__":
    main()
