"""
–ó–∞–≤–¥–∞–Ω–Ω—è 3
–†–æ–±–æ—Ç–∞ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö —ñ SMTP.
"""

import sqlite3
import smtplib
from email.mime.text import MIMEText
from datetime import date


class User:
    """
    –ö–ª–∞—Å, —è–∫–∏–π –æ–ø–∏—Å—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Å–∏—Å—Ç–µ–º–∏.
    –ú—ñ—Å—Ç–∏—Ç—å —ñ–º‚Äô—è, –ø—Ä—ñ–∑–≤–∏—â–µ, –ø–æ –±–∞—Ç—å–∫–æ–≤—ñ, –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —Ç–∞ email.
    """

    def __init__(
        self,
        first_name: str,
        last_name: str,
        middle_name: str,
        birthday: date,
        email: str,
    ):
        self.first_name = first_name
        self.last_name = last_name
        self.middle_name = middle_name
        self.birthday = birthday
        self.email = email

    def get_full_name(self) -> str:
        """–ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤–Ω–µ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
        return f"{self.last_name} {self.first_name} {self.middle_name}"

    def get_short_name(self) -> str:
        """–ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ—Ä–æ—Ç–∫–µ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
        return f"{self.last_name} {self.first_name[0]}. {self.middle_name[0]}."

    def get_age(self) -> int:
        """–û–±—á–∏—Å–ª—é—î –≤—ñ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
        today = date.today()
        return (
            today.year
            - self.birthday.year
            - ((today.month, today.day) < (self.birthday.month, self.birthday.day))
        )

    def __str__(self):
        return f"{self.get_full_name()} ({self.birthday})"


def init_db():
    """–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –±–∞–∑—É –¥–∞–Ω–∏—Ö."""
    conn = sqlite3.connect("users.db")
    cur = conn.cursor()
    cur.execute(
        """
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            first_name TEXT,
            last_name TEXT,
            middle_name TEXT,
            birthday TEXT,
            email TEXT
        )
    """
    )
    conn.commit()
    conn.close()


def add_user_to_db(user: User):
    """–î–æ–¥–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –±–∞–∑–∏."""
    conn = sqlite3.connect("users.db")
    cur = conn.cursor()
    cur.execute(
        """
        INSERT INTO users (first_name, last_name, middle_name, birthday, email)
        VALUES (?, ?, ?, ?, ?)
    """,
        (
            user.first_name,
            user.last_name,
            user.middle_name,
            str(user.birthday),
            user.email,
        ),
    )
    conn.commit()
    conn.close()
    print(f"‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.get_full_name()} –¥–æ–¥–∞–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.")


def find_user_in_db(keyword: str):
    """–ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ —á–∞—Å—Ç–∏–Ω–æ—é —ñ–º–µ–Ω—ñ –∞–±–æ email."""
    conn = sqlite3.connect("users.db")
    cur = conn.cursor()
    cur.execute(
        """
        SELECT first_name, last_name, middle_name, birthday, email FROM users
        WHERE first_name LIKE ? OR last_name LIKE ? OR email LIKE ?
    """,
        (f"%{keyword}%", f"%{keyword}%", f"%{keyword}%"),
    )
    results = cur.fetchall()
    conn.close()
    return results


def send_thank_you_email(user: User):
    """
    –ù–∞–¥—Å–∏–ª–∞—î —Ç–µ—Å—Ç–æ–≤–∏–π –ª–∏—Å—Ç –ø–æ–¥—è–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É (–∑–∞–≥–ª—É—à–∫–∞).
    –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ –¥–∞–Ω—ñ SMTP.
    """

    sender_email = "example@gmail.com"
    recipient_email = user.email
    subject = "–î—è–∫—É—î–º–æ –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é!"
    body = f"–ü—Ä–∏–≤—ñ—Ç, {user.first_name}! –î—è–∫—É—î–º–æ –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —É –Ω–∞—à—ñ–π —Å–∏—Å—Ç–µ–º—ñ."

    msg = MIMEText(body)
    msg["Subject"] = subject
    msg["From"] = sender_email
    msg["To"] = recipient_email

    print(f"üìß –Ü–º—ñ—Ç–∞—Ü—ñ—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ª–∏—Å—Ç–∞ –Ω–∞ {recipient_email}...")

    try:
        smtp = smtplib.SMTP("smtp.gmail.com", 587)
        smtp.ehlo()
        smtp.starttls()
        # smtp.login("your_email", "your_password")
        # smtp.send_message(msg)
        smtp.quit()
        print("‚úÖ –õ–∏—Å—Ç –ø–æ–¥—è–∫–∏ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ (–∑–∞–≥–ª—É—à–∫–∞).")
    except smtplib.SMTPException as e:
        print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ SMTP –ø—ñ–¥ —á–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ª–∏—Å—Ç–∞: {e}")


def register_user(user: User):
    """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è–º –ª–∏—Å—Ç–∞."""
    add_user_to_db(user)
    send_thank_you_email(user)


if __name__ == "__main__":
    init_db()

    new_user = User(
        "–Ü–≥–æ—Ä", "–ü–µ—Ç—Ä–æ–≤", "–°–µ—Ä–≥—ñ–π–æ–≤–∏—á", date(1990, 5, 14), "test@example.com"
    )
    register_user(new_user)

    print("\nüîç –ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ —ñ–º–µ–Ω–µ–º '–Ü–≥–æ—Ä':")
    found = find_user_in_db("–Ü–≥–æ—Ä")
    for row in found:
        print(row)
